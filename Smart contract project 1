// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.0;

contract ErrorHandlingDemo {

    uint public value;
    address public owner;

    constructor() {
        owner = msg.sender;
    }

    function setValue(uint _value) public {
        require(_value > 0, "Value must be greater than zero"); 
        value = _value;
    }

    function divideValue(uint _divider) public view returns (uint) {
        require(_divider > 0, "Divider must be greater than zero"); 
        uint result = value / _divider;
        assert(result <= value); 
        return result;
    }

    function resetValue() public {
        if (value == 0) {
            revert("Value is already zero"); 
        }
        value = 0;
    }

    function onlyOwner() public view {
        require(msg.sender == owner, "Caller is not the owner");
    }

    function checkInvariant() public view {
        assert(value >= 0);
    }
}
